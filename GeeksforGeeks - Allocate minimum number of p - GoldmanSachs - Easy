  int findPages(int A[], int N, int M) {
        if(N < M){
            return -1;
        }
        int ans = INT_MAX;
        int start = 0;
        int sum = 0;
        int end = accumulate(A, A + N, sum);
        while(start <= end){
            int mid = start + (end - start)/2;
            if(isPossible(A, N, M, mid)){
                ans = ans<mid ? ans:mid;
                end = mid - 1;
            }else{
                start = mid + 1;
            }
        }
        return ans;
    }
    bool isPossible(int arr[], int n, int m, int minimum){
        int students = 1;
        int currentsum = 0;
        for(int i = 0; i < n; i++){
            if(arr[i] > minimum){
                return false;
            }
            if(currentsum + arr[i] > minimum){
                students++;
                currentsum = arr[i];
                if(students > m){
                    return false;
                }
            }else{
                currentsum += arr[i];
            }
        }
        return true;
    }
};
